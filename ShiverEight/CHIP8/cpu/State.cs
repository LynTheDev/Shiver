using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ShiverEight.CHIP8.cpu;

public class State
{
    public byte[] Memory = new byte[4096];
    public ushort PC = 0x200;
    public ushort RegI = 0;
    public Stack<ushort> ChipStack = new Stack<ushort>();

    public byte TimerD = 0;
    public byte SoundT = 0;

    public ushort[] RegV = new ushort[16];

    public bool[,] Display = new bool[64, 32];

    public const ushort FontsAddress = 0x050;
    public static readonly byte[] Font = new byte[]
    {
        0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
        0x20, 0x60, 0x20, 0x20, 0x70, // 1
        0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
        0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
        0x90, 0x90, 0xF0, 0x10, 0x10, // 4
        0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
        0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
        0xF0, 0x10, 0x20, 0x40, 0x40, // 7
        0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
        0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
        0xF0, 0x90, 0xF0, 0x90, 0x90, // A
        0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
        0xF0, 0x80, 0x80, 0x80, 0xF0, // C
        0xE0, 0x90, 0x90, 0x90, 0xE0, // D
        0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
        0xF0, 0x80, 0xF0, 0x80, 0x80  // F
    };

    public void LoadFontIntoMemory()
    {
        Array.Copy(Font, 0, Memory, FontsAddress, Font.Length);
    }
}
